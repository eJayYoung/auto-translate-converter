{"version":3,"sources":["../../../lib/utils/zip-stream.js"],"names":["events","require","PromishLib","JSZip","utils","StreamBuf","ZipReader","options","count","jsZip","stream","on","_process","getEntryType","inherits","EventEmitter","_finished","Promish","resolve","then","emit","content","read","loadAsync","zip","forEach","path","entry","dir","async","entryStream","write","data","autodrain","catch","error","encoding","callback","cork","uncork","end","ZipWriter","append","file","name","finalize","type","compression","generateAsync","size","setEncoding","pause","resume","isPaused","pipe","destination","unpipe","unshift","chunk","wrap","module","exports"],"mappings":"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","file":"zip-stream.js","sourcesContent":["/**\r\n * Copyright (c) 2016-2017 Guyon Roche\r\n * LICENCE: MIT - please refer to LICENCE file included with this module\r\n * or https://github.com/guyonroche/exceljs/blob/master/LICENSE\r\n */\r\n\r\n'use strict';\r\n\r\n// The purpose of this module is to wrap the js-zip library into a streaming zip library\r\n// since most of the exceljs code uses streams.\r\n// One day I might find (or build) a properly streaming browser safe zip lib\r\n\r\nvar events = require('events');\r\nvar PromishLib = require('./promish');\r\n\r\nvar JSZip = require('jszip');\r\n\r\nvar utils = require('./utils');\r\nvar StreamBuf = require('./stream-buf');\r\n\r\n\r\n// =============================================================================\r\n// The ZipReader class\r\n// Unpacks an incoming zip stream\r\nvar ZipReader = function(options) {\r\n  this.count = 0;\r\n  this.jsZip = new JSZip();\r\n  this.stream = new StreamBuf();\r\n  this.stream.on('finish', () => {\r\n    this._process();\r\n  });\r\n  this.getEntryType = options.getEntryType || (() => 'string');\r\n};\r\n\r\nutils.inherits(ZipReader, events.EventEmitter, {\r\n  _finished: function() {\r\n    if (!--this.count) {\r\n      PromishLib.Promish.resolve()\r\n        .then(() => {\r\n          this.emit('finished');\r\n        });\r\n    }\r\n  },\r\n  _process: function() {\r\n    var content = this.stream.read();\r\n    this.jsZip.loadAsync(content)\r\n      .then(zip => {\r\n        zip.forEach((path, entry) => {\r\n          if (!entry.dir) {\r\n            this.count++;\r\n            entry.async(this.getEntryType(path))\r\n              .then(data => {\r\n                var entryStream = new StreamBuf();\r\n                entryStream.path = path;\r\n                entryStream.write(data);\r\n                entryStream.autodrain = () => {\r\n                  this._finished();\r\n                };\r\n                entryStream.on('finish', () => {\r\n                  this._finished();\r\n                });\r\n\r\n                this.emit('entry', entryStream);\r\n              })\r\n              .catch(error => {\r\n                this.emit('error', error);\r\n              });\r\n          }\r\n        });\r\n      })\r\n      .catch(error => {\r\n        this.emit('error', error);\r\n      });\r\n  },\r\n\r\n  // ==========================================================================\r\n  // Stream.Writable interface\r\n  write: function(data, encoding, callback) {\r\n    return this.stream.write(data, encoding, callback);\r\n  },\r\n  cork: function() {\r\n    return this.stream.cork();\r\n  },\r\n  uncork: function() {\r\n    return this.stream.uncork();\r\n  },\r\n  end: function() {\r\n    return this.stream.end();\r\n  }\r\n});\r\n\r\n// =============================================================================\r\n// The ZipWriter class\r\n// Packs streamed data into an output zip stream\r\nvar ZipWriter = function() {\r\n  this.zip = new JSZip();\r\n  this.stream = new StreamBuf();\r\n};\r\n\r\nutils.inherits(ZipWriter, events.EventEmitter, {\r\n\r\n  append: function(data, options) {\r\n    this.zip.file(options.name, data);\r\n  },\r\n  finalize: function() {\r\n    var options = {\r\n      type: 'nodebuffer',\r\n      compression: 'DEFLATE'\r\n    };\r\n    return this.zip.generateAsync(options)\r\n      .then(content => {\r\n        this.stream.end(content);\r\n        this.emit('finish');\r\n      });\r\n  },\r\n\r\n  // ==========================================================================\r\n  // Stream.Readable interface\r\n  read: function(size) {\r\n    return this.stream.read(size);\r\n  },\r\n  setEncoding: function(encoding) {\r\n    return this.stream.setEncoding(encoding);\r\n  },\r\n  pause: function() {\r\n    return this.stream.pause();\r\n  },\r\n  resume: function() {\r\n    return this.stream.resume();\r\n  },\r\n  isPaused: function() {\r\n    return this.stream.isPaused();\r\n  },\r\n  pipe: function(destination, options) {\r\n    return this.stream.pipe(destination, options);\r\n  },\r\n  unpipe: function(destination) {\r\n    return this.stream.unpipe(destination);\r\n  },\r\n  unshift: function(chunk) {\r\n    return this.stream.unshift(chunk);\r\n  },\r\n  wrap: function(stream) {\r\n    return this.stream.wrap(stream);\r\n  }\r\n});\r\n\r\n// =============================================================================\r\n\r\nmodule.exports = {\r\n  ZipReader: ZipReader,\r\n  ZipWriter: ZipWriter\r\n};\r\n"]}