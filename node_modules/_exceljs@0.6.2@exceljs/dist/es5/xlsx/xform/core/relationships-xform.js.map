{"version":3,"sources":["../../../../../lib/xlsx/xform/core/relationships-xform.js"],"names":["utils","require","XmlStream","BaseXform","RelationshipXform","RelationshipsXform","module","exports","map","Relationship","inherits","RELATIONSHIPS_ATTRIBUTES","xmlns","render","xmlStream","model","_values","openXml","StdDocAttributes","openNode","self","forEach","relationship","closeNode","parseOpen","node","parser","name","Error","JSON","stringify","parseText","text","parseClose","push","undefined"],"mappings":"AAAA;;;;;;AAMA;;AAEA,IAAIA,QAAQC,QAAQ,sBAAR,CAAZ;AACA,IAAIC,YAAYD,QAAQ,2BAAR,CAAhB;AACA,IAAIE,YAAYF,QAAQ,eAAR,CAAhB;;AAEA,IAAIG,oBAAoBH,QAAQ,sBAAR,CAAxB;;AAEA,IAAII,qBAAqBC,OAAOC,OAAP,GAAiB,YAAW;AACnD,OAAKC,GAAL,GAAW;AACTC,kBAAc,IAAIL,iBAAJ;AADL,GAAX;AAGD,CAJD;;AAMAJ,MAAMU,QAAN,CAAeL,kBAAf,EAAmCF,SAAnC,EAA8C;AAC5CQ,4BAA0B,EAACC,OAAO,8DAAR;AADkB,CAA9C,EAEG;AACDC,UAAQ,gBAASC,SAAT,EAAoBC,KAApB,EAA2B;AACjCA,YAAQA,SAAS,KAAKC,OAAtB;AACAF,cAAUG,OAAV,CAAkBf,UAAUgB,gBAA5B;AACAJ,cAAUK,QAAV,CAAmB,eAAnB,EAAoCd,mBAAmBM,wBAAvD;;AAEA,QAAIS,OAAO,IAAX;AACAL,UAAMM,OAAN,CAAc,UAASC,YAAT,EAAuB;AACnCF,WAAKZ,GAAL,CAASC,YAAT,CAAsBI,MAAtB,CAA6BC,SAA7B,EAAwCQ,YAAxC;AACD,KAFD;;AAIAR,cAAUS,SAAV;AACD,GAZA;;AAcDC,aAAW,mBAASC,IAAT,EAAe;AACxB,QAAI,KAAKC,MAAT,EAAiB;AACf,WAAKA,MAAL,CAAYF,SAAZ,CAAsBC,IAAtB;AACA,aAAO,IAAP;AACD;AACD,YAAQA,KAAKE,IAAb;AACE,WAAK,eAAL;AACE,aAAKZ,KAAL,GAAa,EAAb;AACA,eAAO,IAAP;AACF;AACE,aAAKW,MAAL,GAAc,KAAKlB,GAAL,CAASiB,KAAKE,IAAd,CAAd;AACA,YAAI,KAAKD,MAAT,EAAiB;AACf,eAAKA,MAAL,CAAYF,SAAZ,CAAsBC,IAAtB;AACA,iBAAO,IAAP;AACD;AACD,cAAM,IAAIG,KAAJ,CAAU,uCAAuCC,KAAKC,SAAL,CAAeL,IAAf,CAAjD,CAAN;AAVJ;AAYD,GA/BA;AAgCDM,aAAW,mBAASC,IAAT,EAAe;AACxB,QAAI,KAAKN,MAAT,EAAiB;AACf,WAAKA,MAAL,CAAYK,SAAZ,CAAsBC,IAAtB;AACD;AACF,GApCA;AAqCDC,cAAY,oBAASN,IAAT,EAAe;AACzB,QAAI,KAAKD,MAAT,EAAiB;AACf,UAAI,CAAC,KAAKA,MAAL,CAAYO,UAAZ,CAAuBN,IAAvB,CAAL,EAAmC;AACjC,aAAKZ,KAAL,CAAWmB,IAAX,CAAgB,KAAKR,MAAL,CAAYX,KAA5B;AACA,aAAKW,MAAL,GAAcS,SAAd;AACD;AACD,aAAO,IAAP;AACD;AACD,YAAQR,IAAR;AACE,WAAK,eAAL;AACE,eAAO,KAAP;AACF;AACE,cAAM,IAAIC,KAAJ,CAAU,wCAAwCD,IAAlD,CAAN;AAJJ;AAMD;AAnDA,CAFH","file":"relationships-xform.js","sourcesContent":["/**\r\n * Copyright (c) 2016 Guyon Roche\r\n * LICENCE: MIT - please refer to LICENCE file included with this module\r\n * or https://github.com/guyonroche/exceljs/blob/master/LICENSE\r\n */\r\n\r\n'use strict';\r\n\r\nvar utils = require('../../../utils/utils');\r\nvar XmlStream = require('../../../utils/xml-stream');\r\nvar BaseXform = require('../base-xform');\r\n\r\nvar RelationshipXform = require('./relationship-xform');\r\n\r\nvar RelationshipsXform = module.exports = function() {\r\n  this.map = {\r\n    Relationship: new RelationshipXform()\r\n  };\r\n};\r\n\r\nutils.inherits(RelationshipsXform, BaseXform, {\r\n  RELATIONSHIPS_ATTRIBUTES: {xmlns: 'http://schemas.openxmlformats.org/package/2006/relationships'}\r\n}, {\r\n  render: function(xmlStream, model) {\r\n    model = model || this._values;\r\n    xmlStream.openXml(XmlStream.StdDocAttributes);\r\n    xmlStream.openNode('Relationships', RelationshipsXform.RELATIONSHIPS_ATTRIBUTES);\r\n\r\n    var self = this;\r\n    model.forEach(function(relationship) {\r\n      self.map.Relationship.render(xmlStream, relationship);\r\n    });\r\n\r\n    xmlStream.closeNode();\r\n  },\r\n\r\n  parseOpen: function(node) {\r\n    if (this.parser) {\r\n      this.parser.parseOpen(node);\r\n      return true;\r\n    }\r\n    switch (node.name) {\r\n      case 'Relationships':\r\n        this.model = [];\r\n        return true;\r\n      default:\r\n        this.parser = this.map[node.name];\r\n        if (this.parser) {\r\n          this.parser.parseOpen(node);\r\n          return true;\r\n        }\r\n        throw new Error('Unexpected xml node in parseOpen: ' + JSON.stringify(node));\r\n    }\r\n  },\r\n  parseText: function(text) {\r\n    if (this.parser) {\r\n      this.parser.parseText(text);\r\n    }\r\n  },\r\n  parseClose: function(name) {\r\n    if (this.parser) {\r\n      if (!this.parser.parseClose(name)) {\r\n        this.model.push(this.parser.model);\r\n        this.parser = undefined;\r\n      }\r\n      return true;\r\n    }\r\n    switch (name) {\r\n      case 'Relationships':\r\n        return false;\r\n      default:\r\n        throw new Error('Unexpected xml node in parseClose: ' + name);\r\n    }\r\n  }\r\n});\r\n"]}