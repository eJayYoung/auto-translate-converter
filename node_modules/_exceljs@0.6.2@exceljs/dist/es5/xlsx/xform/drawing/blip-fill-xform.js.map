{"version":3,"sources":["../../../../../lib/xlsx/xform/drawing/blip-fill-xform.js"],"names":["utils","require","BaseXform","BlipXform","BlipFillXform","module","exports","map","inherits","tag","render","xmlStream","model","openNode","leafNode","closeNode","parseOpen","node","parser","name","reset","parseText","parseClose","undefined"],"mappings":"AAAA;;;;;;AAMA;;AAEA,IAAIA,QAAQC,QAAQ,sBAAR,CAAZ;AACA,IAAIC,YAAYD,QAAQ,eAAR,CAAhB;AACA,IAAIE,YAAYF,QAAQ,cAAR,CAAhB;;AAEA,IAAIG,gBAAgBC,OAAOC,OAAP,GAAiB,YAAW;AAC9C,OAAKC,GAAL,GAAW;AACT,cAAU,IAAIJ,SAAJ;AADD,GAAX;AAGD,CAJD;;AAMAH,MAAMQ,QAAN,CAAeJ,aAAf,EAA8BF,SAA9B,EAAyC;;AAEvC,MAAIO,GAAJ,GAAU;AAAE,WAAO,cAAP;AAAwB,GAFG;;AAIvCC,UAAQ,gBAASC,SAAT,EAAoBC,KAApB,EAA2B;AACjCD,cAAUE,QAAV,CAAmB,KAAKJ,GAAxB;;AAEA,SAAKF,GAAL,CAAS,QAAT,EAAmBG,MAAnB,CAA0BC,SAA1B,EAAqCC,KAArC;;AAEA;AACAD,cAAUE,QAAV,CAAmB,WAAnB;AACAF,cAAUG,QAAV,CAAmB,YAAnB;AACAH,cAAUI,SAAV;;AAEAJ,cAAUI,SAAV;AACD,GAfsC;;AAiBvCC,aAAW,mBAASC,IAAT,EAAe;AACxB,QAAI,KAAKC,MAAT,EAAiB;AACf,WAAKA,MAAL,CAAYF,SAAZ,CAAsBC,IAAtB;AACA,aAAO,IAAP;AACD;;AAED,YAAQA,KAAKE,IAAb;AACE,WAAK,KAAKV,GAAV;AACE,aAAKW,KAAL;AACA;;AAEF;AACE,aAAKF,MAAL,GAAc,KAAKX,GAAL,CAASU,KAAKE,IAAd,CAAd;AACA,YAAI,KAAKD,MAAT,EAAiB;AACf,eAAKA,MAAL,CAAYF,SAAZ,CAAsBC,IAAtB;AACD;AACD;AAVJ;AAYA,WAAO,IAAP;AACD,GApCsC;;AAsCvCI,aAAW,qBAAW,CACrB,CAvCsC;;AAyCvCC,cAAY,oBAASH,IAAT,EAAe;AACzB,QAAI,KAAKD,MAAT,EAAiB;AACf,UAAI,CAAC,KAAKA,MAAL,CAAYI,UAAZ,CAAuBH,IAAvB,CAAL,EAAmC;AACjC,aAAKD,MAAL,GAAcK,SAAd;AACD;AACD,aAAO,IAAP;AACD;AACD,YAAQJ,IAAR;AACE,WAAK,KAAKV,GAAV;AACE,aAAKG,KAAL,GAAa,KAAKL,GAAL,CAAS,QAAT,EAAmBK,KAAhC;AACA,eAAO,KAAP;;AAEF;AACE,eAAO,IAAP;AANJ;AAQD;AAxDsC,CAAzC","file":"blip-fill-xform.js","sourcesContent":["/**\r\n * Copyright (c) 2016-2017 Guyon Roche\r\n * LICENCE: MIT - please refer to LICENCE file included with this module\r\n * or https://github.com/guyonroche/exceljs/blob/master/LICENSE\r\n */\r\n\r\n'use strict';\r\n\r\nvar utils = require('../../../utils/utils');\r\nvar BaseXform = require('../base-xform');\r\nvar BlipXform = require('./blip-xform');\r\n\r\nvar BlipFillXform = module.exports = function() {\r\n  this.map = {\r\n    'a:blip': new BlipXform()\r\n  };\r\n};\r\n\r\nutils.inherits(BlipFillXform, BaseXform, {\r\n\r\n  get tag() { return 'xdr:blipFill'; },\r\n\r\n  render: function(xmlStream, model) {\r\n    xmlStream.openNode(this.tag);\r\n\r\n    this.map['a:blip'].render(xmlStream, model);\r\n\r\n    // TODO: options for this + parsing\r\n    xmlStream.openNode('a:stretch');\r\n    xmlStream.leafNode('a:fillRect');\r\n    xmlStream.closeNode();\r\n\r\n    xmlStream.closeNode();\r\n  },\r\n\r\n  parseOpen: function(node) {\r\n    if (this.parser) {\r\n      this.parser.parseOpen(node);\r\n      return true;\r\n    }\r\n\r\n    switch (node.name) {\r\n      case this.tag:\r\n        this.reset();\r\n        break;\r\n\r\n      default:\r\n        this.parser = this.map[node.name];\r\n        if (this.parser) {\r\n          this.parser.parseOpen(node);\r\n        }\r\n        break;\r\n    }\r\n    return true;\r\n  },\r\n\r\n  parseText: function() {\r\n  },\r\n\r\n  parseClose: function(name) {\r\n    if (this.parser) {\r\n      if (!this.parser.parseClose(name)) {\r\n        this.parser = undefined;\r\n      }\r\n      return true;\r\n    }\r\n    switch (name) {\r\n      case this.tag:\r\n        this.model = this.map['a:blip'].model;\r\n        return false;\r\n\r\n      default:\r\n        return true;\r\n    }\r\n  }\r\n});\r\n"]}