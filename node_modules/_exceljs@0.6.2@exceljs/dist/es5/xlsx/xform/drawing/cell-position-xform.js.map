{"version":3,"sources":["../../../../../lib/xlsx/xform/drawing/cell-position-xform.js"],"names":["utils","require","BaseXform","IntegerXform","CellPositionXform","module","exports","options","tag","map","zero","inherits","render","xmlStream","model","openNode","col","Math","floor","colOff","row","rowOff","closeNode","parseOpen","node","parser","name","reset","parseText","text","parseClose","undefined"],"mappings":"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","file":"cell-position-xform.js","sourcesContent":["/**\r\n * Copyright (c) 2016-2017 Guyon Roche\r\n * LICENCE: MIT - please refer to LICENCE file included with this module\r\n * or https://github.com/guyonroche/exceljs/blob/master/LICENSE\r\n */\r\n\r\n'use strict';\r\n\r\nvar utils = require('../../../utils/utils');\r\nvar BaseXform = require('../base-xform');\r\nvar IntegerXform = require('../simple/integer-xform');\r\n\r\nvar CellPositionXform = module.exports = function(options) {\r\n  this.tag = options.tag;\r\n  this.map = {\r\n    'xdr:col': new IntegerXform({tag: 'xdr:col', zero: true}),\r\n    'xdr:colOff': new IntegerXform({tag: 'xdr:colOff', zero: true}),\r\n    'xdr:row': new IntegerXform({tag: 'xdr:row', zero: true}),\r\n    'xdr:rowOff': new IntegerXform({tag: 'xdr:rowOff', zero: true})\r\n  };\r\n};\r\n\r\nutils.inherits(CellPositionXform, BaseXform, {\r\n\r\n  render: function(xmlStream, model) {\r\n    xmlStream.openNode(this.tag);\r\n\r\n    var col = Math.floor(model.col);\r\n    var colOff = Math.floor((model.col - col) * 640000);\r\n    this.map['xdr:col'].render(xmlStream, col);\r\n    this.map['xdr:colOff'].render(xmlStream, colOff);\r\n\r\n    var row = Math.floor(model.row);\r\n    var rowOff = Math.floor((model.row - row) * 180000);\r\n    this.map['xdr:row'].render(xmlStream, row);\r\n    this.map['xdr:rowOff'].render(xmlStream, rowOff);\r\n\r\n    xmlStream.closeNode();\r\n  },\r\n\r\n  parseOpen: function(node) {\r\n    if (this.parser) {\r\n      this.parser.parseOpen(node);\r\n      return true;\r\n    }\r\n    switch (node.name) {\r\n      case this.tag:\r\n        this.reset();\r\n        break;\r\n      default:\r\n        this.parser = this.map[node.name];\r\n        if (this.parser) {\r\n          this.parser.parseOpen(node);\r\n        }\r\n        break;\r\n    }\r\n    return true;\r\n  },\r\n\r\n  parseText: function(text) {\r\n    if (this.parser) {\r\n      this.parser.parseText(text);\r\n    }\r\n  },\r\n\r\n  parseClose: function(name) {\r\n    if (this.parser) {\r\n      if (!this.parser.parseClose(name)) {\r\n        this.parser = undefined;\r\n      }\r\n      return true;\r\n    }\r\n    switch (name) {\r\n      case this.tag:\r\n        this.model = {\r\n          col: this.map['xdr:col'].model + (this.map['xdr:colOff'].model / 640000),\r\n          row: this.map['xdr:row'].model + (this.map['xdr:rowOff'].model / 180000)\r\n        };\r\n        return false;\r\n      default:\r\n        // not quite sure how we get here!\r\n        return true;\r\n    }\r\n  }\r\n});\r\n"]}