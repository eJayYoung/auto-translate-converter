{"version":3,"sources":["../../../../../lib/xlsx/xform/sheet/cell-xform.js"],"names":["utils","require","BaseXform","Enums","Range","getValueType","v","undefined","ValueType","Null","String","Number","Boolean","Date","text","hyperlink","Hyperlink","formula","Formula","error","Error","getEffectiveCellType","cell","type","result","CellXform","module","exports","inherits","tag","prepare","model","options","styleId","styles","addStyleModel","style","sharedStrings","ssId","add","value","date1904","hyperlinks","push","address","target","Merge","merges","formulae","sharedFormula","master","si","ref","expandToAddress","siFormulae","renderFormula","xmlStream","attrs","t","range","leafNode","addAttribute","dateToExcel","render","openNode","closeNode","parseOpen","node","name","attributes","r","s","parseInt","currentNode","parseText","parseClose","xmlDecode","parseFloat","reconcile","getStyleModel","getString","richText","RichText","isDateFmt","numFmt","excelToDate","hyperlinkMap"],"mappings":"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","file":"cell-xform.js","sourcesContent":["/**\r\n * Copyright (c) 2015 Guyon Roche\r\n * LICENCE: MIT - please refer to LICENCE file included with this module\r\n * or https://github.com/guyonroche/exceljs/blob/master/LICENSE\r\n */\r\n\r\n'use strict';\r\n\r\nvar utils = require('../../../utils/utils');\r\nvar BaseXform = require('../base-xform');\r\n\r\nvar Enums = require('../../../doc/enums');\r\nvar Range = require('../../../doc/range');\r\n\r\n\r\nfunction getValueType(v) {\r\n  if ((v === null) || (v === undefined)) {\r\n    return Enums.ValueType.Null;\r\n  } else if ((v instanceof String) || (typeof v === 'string')) {\r\n    return Enums.ValueType.String;\r\n  } else if (typeof v === 'number') {\r\n    return Enums.ValueType.Number;\r\n  } else if (typeof v === 'boolean') {\r\n    return Enums.ValueType.Boolean;\r\n  } else if (v instanceof Date) {\r\n    return Enums.ValueType.Date;\r\n  } else if (v.text && v.hyperlink) {\r\n    return Enums.ValueType.Hyperlink;\r\n  } else if (v.formula) {\r\n    return Enums.ValueType.Formula;\r\n  } else if (v.error) {\r\n    return Enums.ValueType.Error;\r\n  }\r\n  throw new Error('I could not understand type of value');\r\n}\r\n\r\nfunction getEffectiveCellType(cell) {\r\n  switch (cell.type) {\r\n    case Enums.ValueType.Formula:\r\n      return getValueType(cell.result);\r\n    default:\r\n      return cell.type;\r\n  }\r\n}\r\n\r\n\r\nvar CellXform = module.exports = function() {\r\n};\r\n\r\nutils.inherits(CellXform, BaseXform, {\r\n\r\n  get tag() { return 'c'; },\r\n\r\n  prepare: function(model, options) {\r\n    var styleId = options.styles.addStyleModel(model.style || {}, getEffectiveCellType(model));\r\n    if (styleId) {\r\n      model.styleId = styleId;\r\n    }\r\n\r\n    switch (model.type) {\r\n      case Enums.ValueType.String:\r\n        if (options.sharedStrings) {\r\n          model.ssId = options.sharedStrings.add(model.value);\r\n        }\r\n        break;\r\n      case Enums.ValueType.Date:\r\n        if (options.date1904) {\r\n          model.date1904 = true;\r\n        }\r\n        break;\r\n      case Enums.ValueType.Hyperlink:\r\n        if (options.sharedStrings) {\r\n          model.ssId = options.sharedStrings.add(model.text);\r\n        }\r\n        options.hyperlinks.push({\r\n          address: model.address,\r\n          target: model.hyperlink\r\n        });\r\n        break;\r\n      case Enums.ValueType.Merge:\r\n        options.merges.add(model);\r\n        break;\r\n      case Enums.ValueType.Formula:\r\n        if (options.date1904) {\r\n          // in case valueType is date\r\n          model.date1904 = true;\r\n        }\r\n        if (model.formula) {\r\n          options.formulae[model.address] = model;\r\n        } else if (model.sharedFormula) {\r\n          const master = options.formulae[model.sharedFormula];\r\n          if (!master) {\r\n            throw new Error('Shared Formula master must exist above and or left of clone');\r\n          }\r\n          if (master.si !== undefined) {\r\n            model.si = master.si;\r\n            master.ref.expandToAddress(model.address);\r\n          } else {\r\n            model.si = master.si = options.siFormulae++;\r\n            master.ref = new Range(master.address, model.address);\r\n          }\r\n        }\r\n        break;\r\n      default:\r\n        break;\r\n    }\r\n  },\r\n\r\n  renderFormula: function(xmlStream, model) {\r\n    var attrs = null;\r\n    if (model.ref) {\r\n      attrs = {\r\n        t: 'shared',\r\n        ref: model.ref.range,\r\n        si: model.si,\r\n      };\r\n    } else if (model.si !== undefined) {\r\n      attrs = {\r\n        t: 'shared',\r\n        si: model.si,\r\n      };\r\n    }\r\n    switch (getValueType(model.result)) {\r\n      case Enums.ValueType.Null: // ?\r\n        xmlStream.leafNode('f', attrs, model.formula);\r\n        break;\r\n      case Enums.ValueType.String:\r\n        // oddly, formula results don't ever use shared strings\r\n        xmlStream.addAttribute('t', 'str');\r\n        xmlStream.leafNode('f', attrs, model.formula);\r\n        xmlStream.leafNode('v', null, model.result);\r\n        break;\r\n      case Enums.ValueType.Number:\r\n        xmlStream.leafNode('f', attrs, model.formula);\r\n        xmlStream.leafNode('v', null, model.result);\r\n        break;\r\n      case Enums.ValueType.Boolean:\r\n        xmlStream.addAttribute('t', 'b');\r\n        xmlStream.leafNode('f', attrs, model.formula);\r\n        xmlStream.leafNode('v', null, model.result ? 1 : 0);\r\n        break;\r\n      case Enums.ValueType.Error:\r\n        xmlStream.addAttribute('t', 'e');\r\n        xmlStream.leafNode('f', attrs, model.formula);\r\n        xmlStream.leafNode('v', null, model.result.error);\r\n        break;\r\n      case Enums.ValueType.Date:\r\n        xmlStream.leafNode('f', attrs, model.formula);\r\n        xmlStream.leafNode('v', null, utils.dateToExcel(model.result, model.date1904));\r\n        break;\r\n      // case Enums.ValueType.Hyperlink: // ??\r\n      // case Enums.ValueType.Formula:\r\n      default:\r\n        throw new Error('I could not understand type of value');\r\n    }\r\n  },\r\n\r\n  render: function(xmlStream, model) {\r\n    if ((model.type === Enums.ValueType.Null) && !model.styleId) {\r\n      // if null and no style, exit\r\n      return;\r\n    }\r\n\r\n    xmlStream.openNode('c');\r\n    xmlStream.addAttribute('r', model.address);\r\n\r\n    if (model.styleId) {\r\n      xmlStream.addAttribute('s', model.styleId);\r\n    }\r\n\r\n    switch (model.type) {\r\n      case Enums.ValueType.Null:\r\n        break;\r\n\r\n      case Enums.ValueType.Number:\r\n        xmlStream.leafNode('v', null, model.value);\r\n        break;\r\n\r\n      case Enums.ValueType.Boolean:\r\n        xmlStream.addAttribute('t', 'b');\r\n        xmlStream.leafNode('v', null, model.value ? '1' : '0');\r\n        break;\r\n\r\n      case Enums.ValueType.Error:\r\n        xmlStream.addAttribute('t', 'e');\r\n        xmlStream.leafNode('v', null, model.value.error);\r\n        break;\r\n\r\n      case Enums.ValueType.String:\r\n        if (model.ssId !== undefined) {\r\n          xmlStream.addAttribute('t', 's');\r\n          xmlStream.leafNode('v', null, model.ssId);\r\n        } else {\r\n          xmlStream.addAttribute('t', 'str');\r\n          xmlStream.leafNode('v', null, model.value);\r\n        }\r\n        break;\r\n\r\n      case Enums.ValueType.Date:\r\n        xmlStream.leafNode('v', null, utils.dateToExcel(model.value, model.date1904));\r\n        break;\r\n\r\n      case Enums.ValueType.Hyperlink:\r\n        if (model.ssId !== undefined) {\r\n          xmlStream.addAttribute('t', 's');\r\n          xmlStream.leafNode('v', null, model.ssId);\r\n        } else {\r\n          xmlStream.addAttribute('t', 'str');\r\n          xmlStream.leafNode('v', null, model.text);\r\n        }\r\n        break;\r\n\r\n      case Enums.ValueType.Formula:\r\n        this.renderFormula(xmlStream, model);\r\n        break;\r\n\r\n      case Enums.ValueType.Merge:\r\n        // nothing to add\r\n        break;\r\n\r\n      default:\r\n        break;\r\n    }\r\n\r\n    xmlStream.closeNode(); // </c>\r\n  },\r\n  \r\n  parseOpen: function(node) {\r\n    switch (node.name) {\r\n      case 'c':\r\n        // var address = colCache.decodeAddress(node.attributes.r);\r\n        var model = this.model = {\r\n          address: node.attributes.r\r\n        };\r\n        this.t = node.attributes.t;\r\n        if (node.attributes.s) {\r\n          model.styleId = parseInt(node.attributes.s, 10);\r\n        }\r\n        return true;\r\n\r\n      case 'f':\r\n        this.currentNode = 'f';\r\n        this.model.si = node.attributes.si;\r\n        if (node.attributes.t === 'shared') {\r\n          this.model.sharedFormula = true;\r\n        }\r\n        this.model.ref = node.attributes.ref;\r\n        return true;\r\n\r\n      case 'v':\r\n        this.currentNode = 'v';\r\n        return true;\r\n\r\n      default:\r\n        return false;\r\n    }\r\n  },\r\n  parseText: function(text) {\r\n    switch (this.currentNode) {\r\n      case 'f':\r\n        this.model.formula = this.model.formula ? this.model.formula + text : text;\r\n        break;\r\n      case 'v':\r\n        this.model.value = this.model.value ? this.model.value + text : text;\r\n        break;\r\n      default:\r\n        break;\r\n    }\r\n  },\r\n  parseClose: function(name) {\r\n    switch (name) {\r\n      case 'c':\r\n        var model = this.model;\r\n\r\n        // first guess on cell type\r\n        if (model.formula || model.sharedFormula) {\r\n          model.type = Enums.ValueType.Formula;\r\n          if (model.value) {\r\n            if (this.t === 'str') {\r\n              model.result = utils.xmlDecode(model.value);\r\n            } else if (this.t === 'b') {\r\n              model.result = parseInt(model.value, 10) !== 0;\r\n            } else if (this.t === 'e') {\r\n              model.result = { error: model.value };\r\n            } else {\r\n              model.result = parseFloat(model.value);\r\n            }\r\n            model.value = undefined;\r\n          }\r\n        } else if (model.value !== undefined) {\r\n          switch (this.t) {\r\n            case 's':\r\n              model.type = Enums.ValueType.String;\r\n              model.value = parseInt(model.value, 10);\r\n              break;\r\n            case 'str':\r\n              model.type = Enums.ValueType.String;\r\n              model.value = utils.xmlDecode(model.value);\r\n              break;\r\n            case 'b':\r\n              model.type = Enums.ValueType.Boolean;\r\n              model.value = parseInt(model.value, 10) !== 0;\r\n              break;\r\n            case 'e':\r\n              model.type = Enums.ValueType.Error;\r\n              model.value = { error: model.value };\r\n              break;\r\n            default:\r\n              model.type = Enums.ValueType.Number;\r\n              model.value = parseFloat(model.value);\r\n              break;\r\n          }\r\n        } else if (model.styleId) {\r\n          model.type = Enums.ValueType.Null;\r\n        } else {\r\n          model.type = Enums.ValueType.Merge;\r\n        }\r\n        return false;\r\n      case 'f':\r\n      case 'v':\r\n        this.currentNode = undefined;\r\n        return true;\r\n      default:\r\n        return false;\r\n    }\r\n  },\r\n\r\n  reconcile: function(model, options) {\r\n    var style = model.styleId && options.styles.getStyleModel(model.styleId);\r\n    if (style) {\r\n      model.style = style;\r\n    }\r\n    if (model.styleId !== undefined) {\r\n      model.styleId = undefined;\r\n    }\r\n\r\n    switch (model.type) {\r\n      case Enums.ValueType.String:\r\n        if (typeof model.value === 'number') {\r\n          model.value = options.sharedStrings.getString(model.value);\r\n        }\r\n        if (model.value.richText) {\r\n          model.type = Enums.ValueType.RichText;\r\n        }\r\n        break;\r\n      case Enums.ValueType.Number:\r\n        if (style && utils.isDateFmt(style.numFmt)) {\r\n          model.type = Enums.ValueType.Date;\r\n          model.value = utils.excelToDate(model.value, options.date1904);\r\n        }\r\n        break;\r\n      case Enums.ValueType.Formula:\r\n        if ((model.result !== undefined) && style && utils.isDateFmt(style.numFmt)) {\r\n          model.result = utils.excelToDate(model.result, options.date1904);\r\n        }\r\n        if (model.sharedFormula) {\r\n          if (model.formula) {\r\n            options.formulae[model.si] = model;\r\n            delete model.sharedFormula;\r\n          } else {\r\n            model.sharedFormula = options.formulae[model.si].address;\r\n          }\r\n          delete model.si;\r\n        }\r\n        break;\r\n      default:\r\n        break;\r\n    }\r\n    \r\n    // look for hyperlink\r\n    var hyperlink = options.hyperlinkMap[model.address];\r\n    if (hyperlink) {\r\n      model.type = Enums.ValueType.Hyperlink;\r\n      model.text = model.value;\r\n      model.value = undefined;\r\n      model.hyperlink = hyperlink;\r\n    }\r\n  }\r\n});\r\n"]}