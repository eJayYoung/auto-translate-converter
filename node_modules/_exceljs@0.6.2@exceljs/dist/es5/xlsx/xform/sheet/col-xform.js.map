{"version":3,"sources":["../../../../../lib/xlsx/xform/sheet/col-xform.js"],"names":["utils","require","BaseXform","ColXform","module","exports","inherits","tag","prepare","model","options","styleId","styles","addStyleModel","style","render","xmlStream","openNode","addAttribute","min","max","width","hidden","bestFit","outlineLevel","collapsed","closeNode","parseOpen","node","name","parseInt","attributes","parseFloat","parseText","parseClose","reconcile","getStyleModel"],"mappings":"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","file":"col-xform.js","sourcesContent":["/**\r\n * Copyright (c) 2015 Guyon Roche\r\n * LICENCE: MIT - please refer to LICENCE file included with this module\r\n * or https://github.com/guyonroche/exceljs/blob/master/LICENSE\r\n */\r\n\r\n'use strict';\r\n\r\nvar utils = require('../../../utils/utils');\r\nvar BaseXform = require('../base-xform');\r\n\r\nvar ColXform = module.exports = function() {\r\n};\r\n\r\nutils.inherits(ColXform, BaseXform, {\r\n\r\n  get tag() { return 'col'; },\r\n\r\n  prepare: function(model, options) {\r\n    var styleId = options.styles.addStyleModel(model.style || {});\r\n    if (styleId) {\r\n      model.styleId = styleId;\r\n    }\r\n  },\r\n  \r\n  render: function(xmlStream, model) {\r\n    xmlStream.openNode('col');\r\n    xmlStream.addAttribute('min', model.min);\r\n    xmlStream.addAttribute('max', model.max);\r\n    if (model.width) {\r\n      xmlStream.addAttribute('width', model.width);\r\n    }\r\n    if (model.styleId) {\r\n      xmlStream.addAttribute('style', model.styleId);\r\n    }\r\n    if (model.hidden) {\r\n      xmlStream.addAttribute('hidden', '1');\r\n    }\r\n    if (model.bestFit) {\r\n      xmlStream.addAttribute('bestFit', '1');\r\n    }\r\n    if (model.outlineLevel) {\r\n      xmlStream.addAttribute('outlineLevel', model.outlineLevel);\r\n    }\r\n    if (model.collapsed) {\r\n      xmlStream.addAttribute('collapsed', '1');\r\n    }\r\n    xmlStream.addAttribute('customWidth', '1');\r\n    xmlStream.closeNode();\r\n  },\r\n  \r\n  parseOpen: function(node) {\r\n    if (node.name === 'col') {\r\n      var model = this.model = {\r\n        min: parseInt(node.attributes.min || '0', 10),\r\n        max: parseInt(node.attributes.max || '0', 10),\r\n        width: parseFloat(node.attributes.width || '0')\r\n      };\r\n      if (node.attributes.style) {\r\n        model.styleId = parseInt(node.attributes.style, 10);\r\n      }\r\n      if (node.attributes.hidden) {\r\n        model.hidden = true;\r\n      }\r\n      if (node.attributes.bestFit) {\r\n        model.bestFit = true;\r\n      }\r\n      if (node.attributes.outlineLevel) {\r\n        model.outlineLevel = parseInt(node.attributes.outlineLevel, 10);\r\n      }\r\n      if (node.attributes.collapsed) {\r\n        model.collapsed = true;\r\n      }\r\n      return true;\r\n    }\r\n    return false;\r\n  },\r\n  parseText: function() {\r\n  },\r\n  parseClose: function() {\r\n    return false;\r\n  },\r\n  \r\n  reconcile: function(model, options) {\r\n    // reconcile column styles\r\n    if (model.styleId) {\r\n      model.style = options.styles.getStyleModel(model.styleId);\r\n    }\r\n  }\r\n});\r\n"]}