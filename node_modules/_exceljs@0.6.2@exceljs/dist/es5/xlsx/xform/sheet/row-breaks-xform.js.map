{"version":3,"sources":["../../../../../lib/xlsx/xform/sheet/row-breaks-xform.js"],"names":["PageBreaksXform","require","utils","ListXform","RowBreaksXform","module","exports","options","tag","count","childXform","call","inherits","render","xmlStream","model","length","openNode","$","addAttribute","$count","forEach","childModel","closeNode","empty","leafNode"],"mappings":"AAAA;;;;;;AAMA;;AAEA,IAAIA,kBAAkBC,QAAQ,qBAAR,CAAtB;;AAEA,IAAIC,QAAQD,QAAQ,sBAAR,CAAZ;AACA,IAAIE,YAAYF,QAAQ,eAAR,CAAhB;;AAEA,IAAIG,iBAAiBC,OAAOC,OAAP,GAAiB,YAAW;AAC/C,MAAMC,UAAU,EAACC,KAAK,WAAN,EAAmBC,OAAO,IAA1B,EAAgCC,YAAY,IAAIV,eAAJ,EAA5C,EAAhB;AACAG,YAAUQ,IAAV,CAAe,IAAf,EAAqBJ,OAArB;AACD,CAHD;;AAKAL,MAAMU,QAAN,CAAeR,cAAf,EAA+BD,SAA/B,EAA0C;;AAExC;;AAEAU,UAAQ,gBAASC,SAAT,EAAoBC,KAApB,EAA2B;AACjC,QAAIA,SAASA,MAAMC,MAAnB,EAA2B;AACzBF,gBAAUG,QAAV,CAAmB,KAAKT,GAAxB,EAA6B,KAAKU,CAAlC;AACA,UAAI,KAAKT,KAAT,EAAgB;AACdK,kBAAUK,YAAV,CAAuB,KAAKC,MAA5B,EAAoCL,MAAMC,MAA1C;AACAF,kBAAUK,YAAV,CAAuB,kBAAvB,EAA2CJ,MAAMC,MAAjD;AACD;;AAED,UAAIN,aAAa,KAAKA,UAAtB;AACAK,YAAMM,OAAN,CAAc,UAASC,UAAT,EAAqB;AACjCZ,mBAAWG,MAAX,CAAkBC,SAAlB,EAA6BQ,UAA7B;AACD,OAFD;;AAIAR,gBAAUS,SAAV;AACD,KAbD,MAaO,IAAI,KAAKC,KAAT,EAAgB;AACrBV,gBAAUW,QAAV,CAAmB,KAAKjB,GAAxB;AACD;AACF;AArBuC,CAA1C","file":"row-breaks-xform.js","sourcesContent":["/**\r\n * Copyright (c) 2015 Guyon Roche\r\n * LICENCE: MIT - please refer to LICENCE file included with this module\r\n * or https://github.com/guyonroche/exceljs/blob/master/LICENSE\r\n */\r\n\r\n'use strict';\r\n\r\nvar PageBreaksXform = require('./page-breaks-xform');\r\n\r\nvar utils = require('../../../utils/utils');\r\nvar ListXform = require('../list-xform');\r\n\r\nvar RowBreaksXform = module.exports = function() {\r\n  const options = {tag: 'rowBreaks', count: true, childXform: new PageBreaksXform()};\r\n  ListXform.call(this, options);\r\n};\r\n\r\nutils.inherits(RowBreaksXform, ListXform, {\r\n\r\n  // get tag() { return 'rowBreaks'; },\r\n\r\n  render: function(xmlStream, model) {\r\n    if (model && model.length) {\r\n      xmlStream.openNode(this.tag, this.$);\r\n      if (this.count) {\r\n        xmlStream.addAttribute(this.$count, model.length);\r\n        xmlStream.addAttribute('manualBreakCount', model.length);\r\n      }\r\n\r\n      var childXform = this.childXform;\r\n      model.forEach(function(childModel) {\r\n        childXform.render(xmlStream, childModel);\r\n      });\r\n\r\n      xmlStream.closeNode();\r\n    } else if (this.empty) {\r\n      xmlStream.leafNode(this.tag);\r\n    }\r\n  }\r\n});\r\n"]}