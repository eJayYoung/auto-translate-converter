{"version":3,"sources":["../../../../../lib/xlsx/xform/sheet/sheet-format-properties-xform.js"],"names":["_","require","utils","BaseXform","SheetFormatPropertiesXform","module","exports","inherits","tag","render","xmlStream","model","attributes","defaultRowHeight","outlineLevelRow","outlineLevelCol","dyDescent","some","value","undefined","leafNode","parseOpen","node","name","parseFloat","parseInt","parseText","parseClose"],"mappings":"AAAA;;;;;;AAMA;;AAEA,IAAIA,IAAIC,QAAQ,2BAAR,CAAR;AACA,IAAIC,QAAQD,QAAQ,sBAAR,CAAZ;AACA,IAAIE,YAAYF,QAAQ,eAAR,CAAhB;;AAEA,IAAIG,6BAA6BC,OAAOC,OAAP,GAAiB,YAAW,CAC5D,CADD;;AAGAJ,MAAMK,QAAN,CAAeH,0BAAf,EAA2CD,SAA3C,EAAsD;;AAEpD,MAAIK,GAAJ,GAAU;AAAE,WAAO,eAAP;AAAyB,GAFe;;AAIpDC,UAAQ,gBAASC,SAAT,EAAoBC,KAApB,EAA2B;AACjC,QAAIA,KAAJ,EAAW;AACT,UAAIC,aAAa;AACfC,0BAAkBF,MAAME,gBADT;AAEfC,yBAAiBH,MAAMG,eAFR;AAGfC,yBAAiBJ,MAAMI,eAHR;AAIf,2BAAmBJ,MAAMK;AAJV,OAAjB;AAMA,UAAIhB,EAAEiB,IAAF,CAAOL,UAAP,EAAmB,UAASM,KAAT,EAAgB;AAAE,eAAOA,UAAUC,SAAjB;AAA6B,OAAlE,CAAJ,EAAyE;AACvET,kBAAUU,QAAV,CAAmB,eAAnB,EAAoCR,UAApC;AACD;AACF;AACF,GAhBmD;;AAkBpDS,aAAW,mBAASC,IAAT,EAAe;AACxB,QAAIA,KAAKC,IAAL,KAAc,eAAlB,EAAmC;AACjC,WAAKZ,KAAL,GAAa;AACXE,0BAAkBW,WAAWF,KAAKV,UAAL,CAAgBC,gBAAhB,IAAoC,GAA/C,CADP;AAEXG,mBAAWQ,WAAWF,KAAKV,UAAL,CAAgB,iBAAhB,KAAsC,GAAjD,CAFA;AAGXE,yBAAiBW,SAASH,KAAKV,UAAL,CAAgBE,eAAhB,IAAmC,GAA5C,EAAiD,EAAjD,CAHN;AAIXC,yBAAiBU,SAASH,KAAKV,UAAL,CAAgBG,eAAhB,IAAmC,GAA5C,EAAiD,EAAjD;AAJN,OAAb;AAMA,aAAO,IAAP;AACD;AACD,WAAO,KAAP;AACD,GA7BmD;AA8BpDW,aAAW,qBAAW,CACrB,CA/BmD;AAgCpDC,cAAY,sBAAW;AACrB,WAAO,KAAP;AACD;AAlCmD,CAAtD","file":"sheet-format-properties-xform.js","sourcesContent":["/**\r\n * Copyright (c) 2015 Guyon Roche\r\n * LICENCE: MIT - please refer to LICENCE file included with this module\r\n * or https://github.com/guyonroche/exceljs/blob/master/LICENSE\r\n */\r\n\r\n'use strict';\r\n\r\nvar _ = require('../../../utils/under-dash');\r\nvar utils = require('../../../utils/utils');\r\nvar BaseXform = require('../base-xform');\r\n\r\nvar SheetFormatPropertiesXform = module.exports = function() {\r\n};\r\n\r\nutils.inherits(SheetFormatPropertiesXform, BaseXform, {\r\n\r\n  get tag() { return 'sheetFormatPr'; },\r\n\r\n  render: function(xmlStream, model) {\r\n    if (model) {\r\n      var attributes = {\r\n        defaultRowHeight: model.defaultRowHeight,\r\n        outlineLevelRow: model.outlineLevelRow,\r\n        outlineLevelCol: model.outlineLevelCol,\r\n        'x14ac:dyDescent': model.dyDescent\r\n      };\r\n      if (_.some(attributes, function(value) { return value !== undefined; })) {\r\n        xmlStream.leafNode('sheetFormatPr', attributes);\r\n      }\r\n    }\r\n  },\r\n  \r\n  parseOpen: function(node) {\r\n    if (node.name === 'sheetFormatPr') {\r\n      this.model = {\r\n        defaultRowHeight: parseFloat(node.attributes.defaultRowHeight || '0'),\r\n        dyDescent: parseFloat(node.attributes['x14ac:dyDescent'] || '0'),\r\n        outlineLevelRow: parseInt(node.attributes.outlineLevelRow || '0', 10),\r\n        outlineLevelCol: parseInt(node.attributes.outlineLevelCol || '0', 10),\r\n      };\r\n      return true;\r\n    }\r\n    return false;\r\n  },\r\n  parseText: function() {\r\n  },\r\n  parseClose: function() {\r\n    return false;\r\n  }\r\n});\r\n"]}