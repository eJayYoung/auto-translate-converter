{"version":3,"sources":["../../../../../lib/xlsx/xform/sheet/sheet-view-xform.js"],"names":["utils","require","colCache","BaseXform","VIEW_STATES","frozen","frozenSplit","split","SheetViewXform","module","exports","inherits","tag","prepare","model","state","render","xmlStream","openNode","workbookViewId","add","name","value","included","addAttribute","rightToLeft","tabSelected","showRuler","showRowColHeaders","showGridLines","zoomScale","zoomScaleNormal","style","topLeftCell","xSplit","ySplit","activePane","getAddress","address","leafNode","undefined","pane","activeCell","sqref","closeNode","parseOpen","node","sheetView","parseInt","attributes","view","selections","parseText","parseClose","selection","topLeft","reconcile"],"mappings":"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","file":"sheet-view-xform.js","sourcesContent":["/**\r\n * Copyright (c) 2016 Guyon Roche\r\n * LICENCE: MIT - please refer to LICENCE file included with this module\r\n * or https://github.com/guyonroche/exceljs/blob/master/LICENSE\r\n */\r\n\r\n'use strict';\r\n\r\nvar utils = require('../../../utils/utils');\r\nvar colCache = require('../../../utils/col-cache');\r\nvar BaseXform = require('../base-xform');\r\n\r\nvar VIEW_STATES = {\r\n  frozen: 'frozen',\r\n  frozenSplit: 'frozen',\r\n  split: 'split'\r\n};\r\n\r\nvar SheetViewXform = module.exports = function() {\r\n};\r\n\r\nutils.inherits(SheetViewXform, BaseXform, {\r\n  \r\n  get tag() { return 'sheetView'; },\r\n  \r\n  prepare: function(model) {\r\n    switch (model.state) {\r\n      case 'frozen':\r\n      case 'split':\r\n        break;\r\n      default:\r\n        model.state = 'normal';\r\n        break;\r\n    }\r\n  },\r\n\r\n  render: function(xmlStream, model) {\r\n    xmlStream.openNode('sheetView', {\r\n      workbookViewId: model.workbookViewId || 0\r\n    });\r\n    var add = function(name, value, included) {\r\n      if (included) {\r\n        xmlStream.addAttribute(name, value);\r\n      }\r\n    };\r\n    add('rightToLeft', '1', model.rightToLeft === true);\r\n    add('tabSelected', '1', model.tabSelected);\r\n    add('showRuler', '0', model.showRuler === false);\r\n    add('showRowColHeaders', '0', model.showRowColHeaders === false);\r\n    add('showGridLines', '0', model.showGridLines === false);\r\n    add('zoomScale', model.zoomScale, model.zoomScale);\r\n    add('zoomScaleNormal', model.zoomScaleNormal, model.zoomScaleNormal);\r\n    add('view', model.style, model.style);\r\n    \r\n    var topLeftCell, xSplit, ySplit, activePane;\r\n    switch (model.state) {\r\n      case 'frozen':\r\n        xSplit = model.xSplit || 0;\r\n        ySplit = model.ySplit || 0;\r\n        topLeftCell = model.topLeftCell || colCache.getAddress(ySplit + 1, xSplit + 1).address;\r\n        activePane =\r\n          ((model.xSplit && model.ySplit) && 'bottomRight') ||\r\n          (model.xSplit && 'topRight') ||\r\n          'bottomLeft';\r\n\r\n        xmlStream.leafNode('pane', {\r\n          xSplit: model.xSplit || undefined,\r\n          ySplit: model.ySplit || undefined,\r\n          topLeftCell: topLeftCell,\r\n          activePane: activePane,\r\n          state: 'frozen'\r\n        });\r\n        xmlStream.leafNode('selection', {\r\n          pane: activePane,\r\n          activeCell: model.activeCell,\r\n          sqref: model.activeCell\r\n        });\r\n        break;\r\n      case 'split':\r\n        if (model.activePane === 'topLeft') {\r\n          model.activePane = undefined;\r\n        }\r\n        xmlStream.leafNode('pane', {\r\n          xSplit: model.xSplit || undefined,\r\n          ySplit: model.ySplit || undefined,\r\n          topLeftCell: model.topLeftCell,\r\n          activePane: model.activePane\r\n        });\r\n        xmlStream.leafNode('selection', {\r\n          pane: model.activePane,\r\n          activeCell: model.activeCell,\r\n          sqref: model.activeCell\r\n        });\r\n        break;\r\n      case 'normal':\r\n        if (model.activeCell) {\r\n          xmlStream.leafNode('selection', {\r\n            activeCell: model.activeCell,\r\n            sqref: model.activeCell\r\n          });\r\n        }\r\n        break;\r\n      default:\r\n        break;\r\n    }\r\n    xmlStream.closeNode();\r\n  },\r\n  \r\n  parseOpen: function(node) {\r\n    switch (node.name) {\r\n      case 'sheetView':\r\n        this.sheetView = {\r\n          workbookViewId: parseInt(node.attributes.workbookViewId, 10),\r\n          rightToLeft: node.attributes.rightToLeft === '1',\r\n          tabSelected: node.attributes.tabSelected === '1',\r\n          showRuler: !(node.attributes.showRuler === '0'),\r\n          showRowColHeaders: !(node.attributes.showRowColHeaders === '0'),\r\n          showGridLines: !(node.attributes.showGridLines === '0'),\r\n          zoomScale: parseInt(node.attributes.zoomScale || '100', 10),\r\n          zoomScaleNormal: parseInt(node.attributes.zoomScaleNormal || '100', 10),\r\n          style: node.attributes.view\r\n        };\r\n        this.pane = undefined;\r\n        this.selections = {};\r\n        return true;\r\n      case 'pane':\r\n        this.pane = {\r\n          xSplit: parseInt(node.attributes.xSplit || '0', 10),\r\n          ySplit: parseInt(node.attributes.ySplit || '0', 10),\r\n          topLeftCell: node.attributes.topLeftCell,\r\n          activePane: node.attributes.activePane || 'topLeft',\r\n          state: node.attributes.state\r\n        };\r\n        return true;\r\n      case 'selection':\r\n        var name = node.attributes.pane || 'topLeft';\r\n        this.selections[name] = {\r\n          pane: name,\r\n          activeCell: node.attributes.activeCell\r\n        };\r\n        return true;\r\n      default:\r\n        return false;\r\n    }\r\n  },\r\n  parseText: function() {\r\n  },\r\n  parseClose: function(name) {\r\n    var model, selection;\r\n    switch (name) {\r\n      case 'sheetView':\r\n        if (this.sheetView && this.pane) {\r\n          model = this.model = {\r\n            workbookViewId: this.sheetView.workbookViewId,\r\n            rightToLeft: this.sheetView.rightToLeft,\r\n            state: VIEW_STATES[this.pane.state] || 'split', // split is default\r\n            xSplit: this.pane.xSplit,\r\n            ySplit: this.pane.ySplit,\r\n            topLeftCell: this.pane.topLeftCell,\r\n            showRuler: this.sheetView.showRuler,\r\n            showRowColHeaders: this.sheetView.showRowColHeaders,\r\n            showGridLines: this.sheetView.showGridLines,\r\n            zoomScale: this.sheetView.zoomScale,\r\n            zoomScaleNormal: this.sheetView.zoomScaleNormal\r\n          };\r\n          if (this.model.state === 'split') {\r\n            model.activePane = this.pane.activePane;\r\n          }\r\n          selection = this.selections[this.pane.activePane];\r\n          if (selection && selection.activeCell) {\r\n            model.activeCell = selection.activeCell;\r\n          }\r\n          if (this.sheetView.style) {\r\n            model.style = this.sheetView.style;\r\n          }\r\n        } else {\r\n          model = this.model = {\r\n            workbookViewId: this.sheetView.workbookViewId,\r\n            rightToLeft: this.sheetView.rightToLeft,\r\n            state: 'normal',\r\n            showRuler: this.sheetView.showRuler,\r\n            showRowColHeaders: this.sheetView.showRowColHeaders,\r\n            showGridLines: this.sheetView.showGridLines,\r\n            zoomScale: this.sheetView.zoomScale,\r\n            zoomScaleNormal: this.sheetView.zoomScaleNormal\r\n          };\r\n          selection = this.selections.topLeft;\r\n          if (selection && selection.activeCell) {\r\n            model.activeCell = selection.activeCell;\r\n          }\r\n          if (this.sheetView.style) {\r\n            model.style = this.sheetView.style;\r\n          }\r\n        }\r\n        return false;\r\n      default:\r\n        return true;\r\n    }\r\n  },\r\n  \r\n  reconcile: function() {\r\n  }\r\n});\r\n"]}