{"version":3,"sources":["../../../../lib/xlsx/xform/static-xform.js"],"names":["utils","require","BaseXform","XmlStream","build","xmlStream","model","openNode","tag","$","c","forEach","child","t","writeText","closeNode","StaticXform","module","exports","_model","inherits","render","_xml","stream","xml","writeXml","parseOpen","parseText","parseClose","name"],"mappings":"AAAA;;;;;;AAMA;;AAEA,IAAIA,QAAQC,QAAQ,mBAAR,CAAZ;AACA,IAAIC,YAAYD,QAAQ,cAAR,CAAhB;AACA,IAAIE,YAAYF,QAAQ,wBAAR,CAAhB;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA,SAASG,KAAT,CAAeC,SAAf,EAA0BC,KAA1B,EAAiC;AAC/BD,YAAUE,QAAV,CAAmBD,MAAME,GAAzB,EAA8BF,MAAMG,CAApC;AACA,MAAIH,MAAMI,CAAV,EAAa;AACXJ,UAAMI,CAAN,CAAQC,OAAR,CAAgB,UAASC,KAAT,EAAgB;AAC9BR,YAAMC,SAAN,EAAiBO,KAAjB;AACD,KAFD;AAGD;AACD,MAAIN,MAAMO,CAAV,EAAa;AACXR,cAAUS,SAAV,CAAoBR,MAAMO,CAA1B;AACD;AACDR,YAAUU,SAAV;AACD;;AAED,IAAIC,cAAcC,OAAOC,OAAP,GAAiB,UAASZ,KAAT,EAAgB;AACjD;AACA;AACA;AACA;AACA;AACA;AACA,OAAKa,MAAL,GAAcb,KAAd;AACD,CARD;;AAUAN,MAAMoB,QAAN,CAAeJ,WAAf,EAA4Bd,SAA5B,EAAuC;AACrCmB,UAAQ,gBAAShB,SAAT,EAAoB;AAC1B,QAAI,CAAC,KAAKiB,IAAV,EAAgB;AACd,UAAIC,SAAS,IAAIpB,SAAJ,EAAb;AACAC,YAAMmB,MAAN,EAAc,KAAKJ,MAAnB;AACA,WAAKG,IAAL,GAAYC,OAAOC,GAAnB;AACD;AACDnB,cAAUoB,QAAV,CAAmB,KAAKH,IAAxB;AACD,GARoC;;AAUrCI,aAAW,qBAAW;AACpB,WAAO,IAAP;AACD,GAZoC;AAarCC,aAAW,qBAAW,CACrB,CAdoC;AAerCC,cAAY,oBAASC,IAAT,EAAe;AACzB,YAAQA,IAAR;AACE,WAAK,KAAKV,MAAL,CAAYX,GAAjB;AACE,eAAO,KAAP;AACF;AACE,eAAO,IAAP;AAJJ;AAMD;AAtBoC,CAAvC","file":"static-xform.js","sourcesContent":["/**\r\n * Copyright (c) 2016 Guyon Roche\r\n * LICENCE: MIT - please refer to LICENCE file included with this module\r\n * or https://github.com/guyonroche/exceljs/blob/master/LICENSE\r\n */\r\n\r\n'use strict';\r\n\r\nvar utils = require('../../utils/utils');\r\nvar BaseXform = require('./base-xform');\r\nvar XmlStream = require('../../utils/xml-stream');\r\n\r\n// var model = {\r\n//   tag: 'name',\r\n//   $: {attr: 'value'},\r\n//   c: [\r\n//     { tag: 'child' }\r\n//   ],\r\n//   t: 'some text'\r\n// };\r\n\r\nfunction build(xmlStream, model) {\r\n  xmlStream.openNode(model.tag, model.$);\r\n  if (model.c) {\r\n    model.c.forEach(function(child) {\r\n      build(xmlStream, child);\r\n    });\r\n  }\r\n  if (model.t) {\r\n    xmlStream.writeText(model.t);\r\n  }\r\n  xmlStream.closeNode();\r\n}\r\n\r\nvar StaticXform = module.exports = function(model) {\r\n  // This class is an optimisation for static (unimportant and unchanging) xml\r\n  // It is stateless - apart from its static model and so can be used as a singleton\r\n  // Being stateless - it will only track entry to and exit from it's root xml tag during parsing and nothing else\r\n  // Known issues:\r\n  //    since stateless - parseOpen always returns true. Parent xform must know when to start using this xform\r\n  //    if the root tag is recursive, the parsing will behave unpredictably\r\n  this._model = model;\r\n};\r\n\r\nutils.inherits(StaticXform, BaseXform, {\r\n  render: function(xmlStream) {\r\n    if (!this._xml) {\r\n      var stream = new XmlStream();\r\n      build(stream, this._model);\r\n      this._xml = stream.xml;\r\n    }\r\n    xmlStream.writeXml(this._xml);\r\n  },\r\n\r\n  parseOpen: function() {\r\n    return true;\r\n  },\r\n  parseText: function() {\r\n  },\r\n  parseClose: function(name) {\r\n    switch (name) {\r\n      case this._model.tag:\r\n        return false;\r\n      default:\r\n        return true;\r\n    }\r\n  }\r\n});\r\n"]}