{"version":3,"sources":["../../../../../lib/xlsx/xform/style/numfmt-xform.js"],"names":["_","require","utils","defaultNumFormats","BaseXform","hashDefaultFormats","hash","each","dnf","id","f","parseInt","defaultFmtHash","NumFmtXform","module","exports","formatCode","inherits","tag","getDefaultFmtId","getDefaultFmtCode","numFmtId","render","xmlStream","model","leafNode","parseOpen","node","name","attributes","replace","parseText","parseClose"],"mappings":"AAAA;;;;;;AAMA;;AAEA,IAAIA,IAAIC,QAAQ,2BAAR,CAAR;AACA,IAAIC,QAAQD,QAAQ,sBAAR,CAAZ;AACA,IAAIE,oBAAoBF,QAAQ,yBAAR,CAAxB;;AAEA,IAAIG,YAAYH,QAAQ,eAAR,CAAhB;;AAGA,SAASI,kBAAT,GAA8B;AAC5B,MAAIC,OAAO,EAAX;AACAN,IAAEO,IAAF,CAAOJ,iBAAP,EAA0B,UAASK,GAAT,EAAcC,EAAd,EAAkB;AAC1C,QAAID,IAAIE,CAAR,EAAW;AACTJ,WAAKE,IAAIE,CAAT,IAAcC,SAASF,EAAT,EAAa,EAAb,CAAd;AACD;AACD;AACD,GALD;AAMA,SAAOH,IAAP;AACD;AACD,IAAIM,iBAAiBP,oBAArB;;AAGA;AACA,IAAIQ,cAAcC,OAAOC,OAAP,GAAiB,UAASN,EAAT,EAAaO,UAAb,EAAyB;AAC1D,OAAKP,EAAL,GAAUA,EAAV;AACA,OAAKO,UAAL,GAAkBA,UAAlB;AACD,CAHD;;AAMAd,MAAMe,QAAN,CAAeJ,WAAf,EAA4BT,SAA5B,EAAuC;;AAErC,MAAIc,GAAJ,GAAU;AAAE,WAAO,QAAP;AAAkB,GAFO;;AAIrCC,mBAAiB,yBAASH,UAAT,EAAqB;AACpC,WAAOJ,eAAeI,UAAf,CAAP;AACD,GANoC;AAOrCI,qBAAmB,2BAASC,QAAT,EAAmB;AACpC,WAAOlB,kBAAkBkB,QAAlB,KAA+BlB,kBAAkBkB,QAAlB,EAA4BX,CAAlE;AACD;AAToC,CAAvC,EAUG;AACDY,UAAQ,gBAASC,SAAT,EAAoBC,KAApB,EAA2B;AACjCD,cAAUE,QAAV,CAAmB,QAAnB,EAA6B,EAACJ,UAAUG,MAAMf,EAAjB,EAAqBO,YAAYQ,MAAMR,UAAvC,EAA7B;AACD,GAHA;AAIDU,aAAW,mBAASC,IAAT,EAAe;AACxB,YAAQA,KAAKC,IAAb;AACE,WAAK,QAAL;AACE,aAAKJ,KAAL,GAAa;AACXf,cAAIE,SAASgB,KAAKE,UAAL,CAAgBR,QAAzB,EAAmC,EAAnC,CADO;AAEXL,sBAAYW,KAAKE,UAAL,CAAgBb,UAAhB,CAA2Bc,OAA3B,CAAmC,UAAnC,EAA+C,IAA/C;AAFD,SAAb;AAIA,eAAO,IAAP;AACF;AACE,eAAO,KAAP;AARJ;AAUD,GAfA;AAgBDC,aAAW,qBAAW,CACrB,CAjBA;AAkBDC,cAAY,sBAAW;AACrB,WAAO,KAAP;AACD;AApBA,CAVH","file":"numfmt-xform.js","sourcesContent":["/**\r\n * Copyright (c) 2015 Guyon Roche\r\n * LICENCE: MIT - please refer to LICENCE file included with this module\r\n * or https://github.com/guyonroche/exceljs/blob/master/LICENSE\r\n */\r\n\r\n'use strict';\r\n\r\nvar _ = require('../../../utils/under-dash');\r\nvar utils = require('../../../utils/utils');\r\nvar defaultNumFormats = require('../../defaultnumformats');\r\n\r\nvar BaseXform = require('../base-xform');\r\n\r\n\r\nfunction hashDefaultFormats() {\r\n  var hash = {};\r\n  _.each(defaultNumFormats, function(dnf, id) {\r\n    if (dnf.f) {\r\n      hash[dnf.f] = parseInt(id, 10);\r\n    }\r\n    // at some point, add the other cultures here...\r\n  });\r\n  return hash;\r\n}\r\nvar defaultFmtHash = hashDefaultFormats();\r\n\r\n\r\n// NumFmt encapsulates translation between number format and xlsx\r\nvar NumFmtXform = module.exports = function(id, formatCode) {\r\n  this.id = id;\r\n  this.formatCode = formatCode;\r\n};\r\n\r\n\r\nutils.inherits(NumFmtXform, BaseXform, {\r\n\r\n  get tag() { return 'numFmt'; },\r\n\r\n  getDefaultFmtId: function(formatCode) {\r\n    return defaultFmtHash[formatCode];\r\n  },\r\n  getDefaultFmtCode: function(numFmtId) {\r\n    return defaultNumFormats[numFmtId] && defaultNumFormats[numFmtId].f;\r\n  }\r\n}, {\r\n  render: function(xmlStream, model) {\r\n    xmlStream.leafNode('numFmt', {numFmtId: model.id, formatCode: model.formatCode});\r\n  },\r\n  parseOpen: function(node) {\r\n    switch (node.name) {\r\n      case 'numFmt':\r\n        this.model = {\r\n          id: parseInt(node.attributes.numFmtId, 10),\r\n          formatCode: node.attributes.formatCode.replace(/[\\\\](.)/g, '$1')\r\n        };\r\n        return true;\r\n      default:\r\n        return false;\r\n    }\r\n  },\r\n  parseText: function() {\r\n  },\r\n  parseClose: function() {\r\n    return false;\r\n  }\r\n});\r\n"]}